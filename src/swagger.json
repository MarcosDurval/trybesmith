{
  "openapi": "3.0.0",
  "info": {
    "title": "TrybeSmith",
    "description": "Uma api de itens medievais",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "Api de test"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "sumary": "Cadastro de usuarios",
        "description": "Essa rota será responsavel por cadastrar novos usuários",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contém um token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "sumary": "Login de usuario",
        "description": "Essa rota será responsavel por fazer login",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contém um token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Contém uma mensagem com o erro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": "Username or password invalid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Contém uma mensagem com o erro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "BadRequest": {
                    "value": {
                      "error": "Username is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "sumary": "Listagem de produtos",
        "description": "Essa rota será responsavel cadastrar um novo produto",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newProduct"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "sumary": "Listagem de produtos",
        "description": "Essa rota será responsavel por listar todos os produtos",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "sumary": "Listagem de vendas",
        "description": "Essa rota será responsavel por listar todas as vendas",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items":{
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "sumary": "Cadastro de venda",
        "description": "Essa rota será responsavel cadastrar uma venda",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type":"object",
                "properties":{
                  "products":{
                    "$ref": "#/components/schemas/Order/properties/products"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type":"object",
                  "properties":{
                    "order":{
                      "properties":{
                        "userId":{
                          "$ref": "#/components/schemas/Order/properties/userId"
                        },
                        "products":{
                          "$ref": "#/components/schemas/Order/properties/products"
                        }
                      }
                    } 
                  }
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "sumary": "Listagem de vendas",
        "description": "Essa rota será responsavel por listar uma venda",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Batman"
          },
          "classe": {
            "type": "string",
            "example": "tank"
          },
          "level": {
            "type": "number",
            "example":30
          },
          "password": {
            "type": "string",
            "example":"senhasecreta"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Batman"
          },
          "password": {
            "type": "string",
            "example": "senhasecreta"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "espada longa"
          },
          "amount": {
            "type": "string",
            "example": "8k de prata"
          },
          "orderId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "newProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "espada longa"
          },
          "amount": {
            "type": "string",
            "example": "8k de prata"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id":{
            "type":"integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example":1
          },
          "products": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example":[1,2]
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}